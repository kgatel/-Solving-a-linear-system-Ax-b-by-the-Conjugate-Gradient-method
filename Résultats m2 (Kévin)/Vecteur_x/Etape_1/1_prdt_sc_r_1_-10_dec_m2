R(1):
0011111110110011010110000010110100111000010101111011010110000000
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111011                                                     
 bits de mantisses : 0011010110000010110100111000010101111011010110000000            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 1)+2^( 0)+0 = 1019 
 
exposant réel = 1019-d = 1019-1023 =   -4 
 
 mantisse = 
2^(- 3) + 2^(- 4) + 2^(- 6) + 2^(- 8) + 2^(- 9) + 2^(-15) + 2^(-17) + 2^(-18) + 2^(-20) + 2^(-23) + 2^(-24) + 2^(-25) + 2^(-30) + 2^(-32) + 2^(-34) + 2^(-35) + 2^(-36) + 2^(-37) + 2^(-39) + 2^(-40) + 2^(-42) + 2^(-44) + 2^(-45) +  0 =  A (à calculer sur https://www.dcode.fr/calcul-sommation par exemple)
 
Valeur décimale exacte : ((-1)^0)*(1+A)*(2^(  -4)) = B (wolfram alpha)



R(2):
1011111110100101001111101001111000110101000001010100010011100000
 
 bit de signe : 1                                                               
 bits d''exposants : 01111111010                                                     
 bits de mantisses : 0101001111101001111000110101000001010100010011100000            
 
 Le nombre est négatif car le bit de signe est à 1 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 1)+0 = 1018 
 
exposant réel = 1018-d = 1018-1023 =   -5 
 
 mantisse = 
2^(- 2) + 2^(- 4) + 2^(- 7) + 2^(- 8) + 2^(- 9) + 2^(-10) + 2^(-11) + 2^(-13) + 2^(-16) + 2^(-17) + 2^(-18) + 2^(-19) + 2^(-23) + 2^(-24) + 2^(-26) + 2^(-28) + 2^(-34) + 2^(-36) + 2^(-38) + 2^(-42) + 2^(-45) + 2^(-46) + 2^(-47) +  0 =  A (à calculer sur https://www.dcode.fr/calcul-sommation par exemple)
 
Valeur décimale exacte : ((-1)^1)*(1+A)*(2^(  -5)) = B (wolfram alpha)



R(3)
1011111110101110110101010110100000010010111010001010110000100000
 
 bit de signe : 1                                                               
 bits d''exposants : 01111111010                                                     
 bits de mantisses : 1110110101010110100000010010111010001010110000100000            
 
 Le nombre est négatif car le bit de signe est à 1 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 1)+0 = 1018 
 
exposant réel = 1018-d = 1018-1023 =   -5 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 5) + 2^(- 6) + 2^(- 8) + 2^(-10) + 2^(-12) + 2^(-14) + 2^(-15) + 2^(-17) + 2^(-24) + 2^(-27) + 2^(-29) + 2^(-30) + 2^(-31) + 2^(-33) + 2^(-37) + 2^(-39) + 2^(-41) + 2^(-42) + 2^(-47) +  0 =  A (à calculer sur https://www.dcode.fr/calcul-sommation par exemple)
 
Valeur décimale exacte : ((-1)^1)*(1+A)*(2^(  -5)) = B (wolfram alpha)



R(4)
1011111110101111101010001100011110101100100101000101010101000000
 
 bit de signe : 1                                                               
 bits d''exposants : 01111111010                                                     
 bits de mantisses : 1111101010001100011110101100100101000101010101000000            
 
 Le nombre est négatif car le bit de signe est à 1 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 1)+0 = 1018 
 
exposant réel = 1018-d = 1018-1023 =   -5 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 4) + 2^(- 5) + 2^(- 7) + 2^(- 9) + 2^(-13) + 2^(-14) + 2^(-18) + 2^(-19) + 2^(-20) + 2^(-21) + 2^(-23) + 2^(-25) + 2^(-26) + 2^(-29) + 2^(-32) + 2^(-34) + 2^(-38) + 2^(-40) + 2^(-42) + 2^(-44) + 2^(-46) +  0 =  A (à calculer sur https://www.dcode.fr/calcul-sommation par exemple)
 
Valeur décimale exacte : ((-1)^1)*(1+A)*(2^(  -5)) = B (wolfram alpha)



R2
0011111110001110011110100101111100010001110011111000101101110001
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111000                                                     
 bits de mantisses : 1110011110100101111100010001110011111000101101110001            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+0 = 1016 
 
exposant réel = 1016-d = 1016-1023 =   -7 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 6) + 2^(- 7) + 2^(- 8) + 2^(- 9) + 2^(-11) + 2^(-14) + 2^(-16) + 2^(-17) + 2^(-18) + 2^(-19) + 2^(-20) + 2^(-24) + 2^(-28) + 2^(-29) + 2^(-30) + 2^(-33) + 2^(-34) + 2^(-35) + 2^(-36) + 2^(-37) + 2^(-41) + 2^(-43) + 2^(-44) + 2^(-46) + 2^(-47) + 2^(-48) + 2^(-52) +  0 =  A (à calculer sur https://www.dcode.fr/calcul-sommation par exemple)
 
Valeur décimale exacte : ((-1)^0)*(1+A)*(2^(  -7)) = B (wolfram alpha)
