x_3(1) :
0011111111110000000000101010101101100100001111011001100001011001
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111111                                                     
 bits de mantisses : 0000000000101010101101100100001111011001100001011001            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 2)+2^( 1)+2^( 0)+0 = 1023 
 
exposant réel = 1023-d = 1023-1023 =    0 
 
 mantisse = 
2^(-11) + 2^(-13) + 2^(-15) + 2^(-17) + 2^(-19) + 2^(-20) + 2^(-22) + 2^(-23) + 2^(-26) + 2^(-31) + 2^(-32) + 2^(-33) + 2^(-34) + 2^(-36) + 2^(-37) + 2^(-40) + 2^(-41) + 2^(-46) + 2^(-48) + 2^(-49) + 2^(-52) +  0 = 2935144421465/4503599627370496
 
Valeur décimale exacte : ((-1)^0)*(1+2935144421465/4503599627370496)*(2^(   0)) = 1.0006517329834621055



x_3(2) :
0011111111101111110000111110001111100111000110100111110110101110
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111110                                                     
 bits de mantisses : 1111110000111110001111100111000110100111110110101110            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 2)+2^( 1)+0 = 1022 
 
exposant réel = 1022-d = 1022-1023 =   -1 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 4) + 2^(- 5) + 2^(- 6) + 2^(-11) + 2^(-12) + 2^(-13) + 2^(-14) + 2^(-15) + 2^(-19) + 2^(-20) + 2^(-21) + 2^(-22) + 2^(-23) + 2^(-26) + 2^(-27) + 2^(-28) + 2^(-32) + 2^(-33) + 2^(-35) + 2^(-38) + 2^(-39) + 2^(-40) + 2^(-41) + 2^(-42) + 2^(-44) + 2^(-45) + 2^(-47) + 2^(-49) + 2^(-50) + 2^(-51) +  0 = 2218754126462679/2251799813685248 
 
Valeur décimale exacte : ((-1)^0)*(1+2218754126462679/2251799813685248)*(2^(  -1)) = 0.9926623834361885113



x_3(3) :
0011111111110000010010000101101100110000100011011100000101111000
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111111                                                     
 bits de mantisses : 0000010010000101101100110000100011011100000101111000            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 2)+2^( 1)+2^( 0)+0 = 1023 
 
exposant réel = 1023-d = 1023-1023 =    0 
 
 mantisse = 
2^(- 6) + 2^(- 9) + 2^(-14) + 2^(-16) + 2^(-17) + 2^(-19) + 2^(-20) + 2^(-23) + 2^(-24) + 2^(-29) + 2^(-33) + 2^(-34) + 2^(-36) + 2^(-37) + 2^(-38) + 2^(-44) + 2^(-46) + 2^(-47) + 2^(-48) + 2^(-49) +  0 = 9944561727535/562949953421312
Valeur décimale exacte : ((-1)^0)*(1+9944561727535/562949953421312)*(2^(   0)) = 1.0176650902395447673



x_3(4) :
0011111111101111101000011110101001101100101001110110001101110000
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111110                                                     
 bits de mantisses : 1111101000011110101001101100101001110110001101110000            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 2)+2^( 1)+0 = 1022 
 
exposant réel = 1022-d = 1022-1023 =   -1 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 4) + 2^(- 5) + 2^(- 7) + 2^(-12) + 2^(-13) + 2^(-14) + 2^(-15) + 2^(-17) + 2^(-19) + 2^(-22) + 2^(-23) + 2^(-25) + 2^(-26) + 2^(-29) + 2^(-31) + 2^(-34) + 2^(-35) + 2^(-36) + 2^(-38) + 2^(-39) + 2^(-43) + 2^(-44) + 2^(-46) + 2^(-47) + 2^(-48) +  0 =  275009554249271/281474976710656
Valeur décimale exacte : ((-1)^0)*(1+275009554249271/281474976710656)*(2^(  -1)) = 0.9885151025911067535



alpha :
0100000011000100001100100111110100010001110111010101100000100100
 
 bit de signe : 0                                                               
 bits d''exposants : 10000001100                                                     
 bits de mantisses : 0100001100100111110100010001110111010101100000100100            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^(10)+2^( 3)+2^( 2)+0 = 1036 
 
exposant réel = 1036-d = 1036-1023 =   13 
 
 mantisse = 
2^(- 2) + 2^(- 7) + 2^(- 8) + 2^(-11) + 2^(-14) + 2^(-15) + 2^(-16) + 2^(-17) + 2^(-18) + 2^(-20) + 2^(-24) + 2^(-28) + 2^(-29) + 2^(-30) + 2^(-32) + 2^(-33) + 2^(-34) + 2^(-36) + 2^(-38) + 2^(-40) + 2^(-41) + 2^(-47) + 2^(-50) +  0 =  295353164715529/1125899906842624
 
Valeur décimale exacte : ((-1)^0)*(1+295353164715529/1125899906842624)*(2^(  13)) = 10340.977107685124793



p_3(1) :
0011111001110000111010110000000110001011001111010011110110000010
 
 bit de signe : 0                                                               
 bits d''exposants : 01111100111                                                     
 bits de mantisses : 0000111010110000000110001011001111010011110110000010            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 2)+2^( 1)+2^( 0)+0 =  999 
 
exposant réel =  999-d =  999-1023 =  -24 
 
 mantisse = 
2^(- 5) + 2^(- 6) + 2^(- 7) + 2^(- 9) + 2^(-11) + 2^(-12) + 2^(-20) + 2^(-21) + 2^(-25) + 2^(-27) + 2^(-28) + 2^(-31) + 2^(-32) + 2^(-33) + 2^(-34) + 2^(-36) + 2^(-39) + 2^(-40) + 2^(-41) + 2^(-42) + 2^(-44) + 2^(-45) + 2^(-51) +  0 =  129195931770561/2251799813685248
 
Valeur décimale exacte : ((-1)^0)*(1+129195931770561/2251799813685248)*(2^( -24)) = 6.3024432614793243154×10^-8



p_3(2) :
1011111010100111110011110010001001001000010011100111100110011111
 
 bit de signe : 1                                                               
 bits d''exposants : 01111101010                                                     
 bits de mantisses : 0111110011110010001001001000010011100111100110011111            
 
 Le nombre est négatif car le bit de signe est à 1 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 3)+2^( 1)+0 = 1002 
 
exposant réel = 1002-d = 1002-1023 =  -21 
 
 mantisse = 
2^(- 2) + 2^(- 3) + 2^(- 4) + 2^(- 5) + 2^(- 6) + 2^(- 9) + 2^(-10) + 2^(-11) + 2^(-12) + 2^(-15) + 2^(-19) + 2^(-22) + 2^(-25) + 2^(-30) + 2^(-33) + 2^(-34) + 2^(-35) + 2^(-38) + 2^(-39) + 2^(-40) + 2^(-41) + 2^(-44) + 2^(-45) + 2^(-48) + 2^(-49) + 2^(-50) + 2^(-51) + 2^(-52) +  0 = 2198070985914783/4503599627370496

Valeur décimale exacte : ((-1)^1)*(1+2198070985914783/4503599627370496)*(2^( -21)) = -7.0956697638732054155×10^-7


p_3(3) :
0011111010111100101010001110110100100010101010100110000010110011
 
 bit de signe : 0                                                               
 bits d''exposants : 01111101011                                                     
 bits de mantisses : 1100101010001110110100100010101010100110000010110011            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 3)+2^( 1)+2^( 0)+0 = 1003 
 
exposant réel = 1003-d = 1003-1023 =  -20 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 5) + 2^(- 7) + 2^(- 9) + 2^(-13) + 2^(-14) + 2^(-15) + 2^(-17) + 2^(-18) + 2^(-20) + 2^(-23) + 2^(-27) + 2^(-29) + 2^(-31) + 2^(-33) + 2^(-35) + 2^(-38) + 2^(-39) + 2^(-45) + 2^(-47) + 2^(-48) + 2^(-51) + 2^(-52) +  0 = 3563436162834611/4503599627370496 
 
Valeur décimale exacte : ((-1)^0)*(1+3563436162834611/4503599627370496)*(2^( -20)) = 1.7082612752458388633×10^-6



p_3(4) :
1011111010110010101000100001001110110110010111110100100011010101
 
 bit de signe : 1                                                               
 bits d''exposants : 01111101011                                                     
 bits de mantisses : 0010101000100001001110110110010111110100100011010101            
 
 Le nombre est négatif car le bit de signe est à 1 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 3)+2^( 1)+2^( 0)+0 = 1003 
 
exposant réel = 1003-d = 1003-1023 =  -20 
 
 mantisse = 
2^(- 3) + 2^(- 5) + 2^(- 7) + 2^(-11) + 2^(-16) + 2^(-19) + 2^(-20) + 2^(-21) + 2^(-23) + 2^(-24) + 2^(-26) + 2^(-27) + 2^(-30) + 2^(-32) + 2^(-33) + 2^(-34) + 2^(-35) + 2^(-36) + 2^(-38) + 2^(-41) + 2^(-45) + 2^(-46) + 2^(-48) + 2^(-50) + 2^(-52) +  0 =  741155501197525/4503599627370496
 
Valeur décimale exacte : ((-1)^1)*(1+741155501197525/4503599627370496)*(2^( -20)) = -1.1106200985445194313×10^-6


x_4(1) :
0011111111101111111111111111111111111111010101101100000011010100
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111110                                                     
 bits de mantisses : 1111111111111111111111111111010101101100000011010100            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 2)+2^( 1)+0 = 1022 
 
exposant réel = 1022-d = 1022-1023 =   -1 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 4) + 2^(- 5) + 2^(- 6) + 2^(- 7) + 2^(- 8) + 2^(- 9) + 2^(-10) + 2^(-11) + 2^(-12) + 2^(-13) + 2^(-14) + 2^(-15) + 2^(-16) + 2^(-17) + 2^(-18) + 2^(-19) + 2^(-20) + 2^(-21) + 2^(-22) + 2^(-23) + 2^(-24) + 2^(-25) + 2^(-26) + 2^(-27) + 2^(-28) + 2^(-30) + 2^(-32) + 2^(-34) + 2^(-35) + 2^(-37) + 2^(-38) + 2^(-45) + 2^(-46) + 2^(-48) + 2^(-50) +  0 = 1125899904069685/1125899906842624 

Valeur décimale exacte : ((-1)^0)*(1+1125899904069685/1125899906842624)*(2^(  -1)) = 0.9999999987685677105


 
x_4(2) :
0011111111101111111111111111111111111111100111110010100001011100
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111110                                                     
 bits de mantisses : 1111111111111111111111111111100111110010100001011100            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 2)+2^( 1)+0 = 1022 
 
exposant réel = 1022-d = 1022-1023 =   -1 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 4) + 2^(- 5) + 2^(- 6) + 2^(- 7) + 2^(- 8) + 2^(- 9) + 2^(-10) + 2^(-11) + 2^(-12) + 2^(-13) + 2^(-14) + 2^(-15) + 2^(-16) + 2^(-17) + 2^(-18) + 2^(-19) + 2^(-20) + 2^(-21) + 2^(-22) + 2^(-23) + 2^(-24) + 2^(-25) + 2^(-26) + 2^(-27) + 2^(-28) + 2^(-29) + 2^(-32) + 2^(-33) + 2^(-34) + 2^(-35) + 2^(-36) + 2^(-39) + 2^(-41) + 2^(-46) + 2^(-48) + 2^(-49) + 2^(-50) +  0 = 1125899905255959/1125899906842624 
 
Valeur décimale exacte : ((-1)^0)*(1+1125899905255959/1125899906842624)*(2^(  -1)) = 0.9999999992953791939

 
 
x_4(3) : 
0011111111101111111111111111111111111111101110110000101101100011
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111110                                                     
 bits de mantisses : 1111111111111111111111111111101110110000101101100011            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 2)+2^( 1)+0 = 1022 
 
exposant réel = 1022-d = 1022-1023 =   -1 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 4) + 2^(- 5) + 2^(- 6) + 2^(- 7) + 2^(- 8) + 2^(- 9) + 2^(-10) + 2^(-11) + 2^(-12) + 2^(-13) + 2^(-14) + 2^(-15) + 2^(-16) + 2^(-17) + 2^(-18) + 2^(-19) + 2^(-20) + 2^(-21) + 2^(-22) + 2^(-23) + 2^(-24) + 2^(-25) + 2^(-26) + 2^(-27) + 2^(-28) + 2^(-29) + 2^(-31) + 2^(-32) + 2^(-33) + 2^(-35) + 2^(-36) + 2^(-41) + 2^(-43) + 2^(-44) + 2^(-46) + 2^(-47) + 2^(-51) + 2^(-52) +  0 =  4503599622851427/4503599627370496
 
Valeur décimale exacte : ((-1)^0)*(1+4503599622851427/4503599627370496)*(2^(  -1)) = 0.9999999994982825546



x_4(4) : 
0011111111101111111111111111111111111111110010011100011101101111
 
 bit de signe : 0                                                               
 bits d''exposants : 01111111110                                                     
 bits de mantisses : 1111111111111111111111111111110010011100011101101111            
 
 Le nombre est positif car le bit de signe est à 0 ; normalisé car les bits d'exposants sont différents de : 000..0
 
 exposant biaisé = 
2^( 9)+2^( 8)+2^( 7)+2^( 6)+2^( 5)+2^( 4)+2^( 3)+2^( 2)+2^( 1)+0 = 1022 
 
exposant réel = 1022-d = 1022-1023 =   -1 
 
 mantisse = 
2^(- 1) + 2^(- 2) + 2^(- 3) + 2^(- 4) + 2^(- 5) + 2^(- 6) + 2^(- 7) + 2^(- 8) + 2^(- 9) + 2^(-10) + 2^(-11) + 2^(-12) + 2^(-13) + 2^(-14) + 2^(-15) + 2^(-16) + 2^(-17) + 2^(-18) + 2^(-19) + 2^(-20) + 2^(-21) + 2^(-22) + 2^(-23) + 2^(-24) + 2^(-25) + 2^(-26) + 2^(-27) + 2^(-28) + 2^(-29) + 2^(-30) + 2^(-33) + 2^(-36) + 2^(-37) + 2^(-38) + 2^(-42) + 2^(-43) + 2^(-44) + 2^(-46) + 2^(-47) + 2^(-49) + 2^(-50) + 2^(-51) + 2^(-52) +  0 =  4503599623817071/4503599627370496
 
Valeur décimale exacte : ((-1)^0)*(1+4503599623817071/4503599627370496)*(2^(  -1)) = 0.9999999996054905749
